# 1-my_list.py

class MyList(list):
    """
    MyList is a subclass of list that includes a method `print_sorted`
    which prints the elements in ascending order without altering the original list.
    """
    def __init__(self, items=None):
        # If items is provided, initialize with those items; otherwise, start with an empty list
        if items is None:
            items = []
        super().__init__(items)
    
    def print_sorted(self):
        # Print a sorted version of the list without modifying the original list
        print(sorted(self))

# =============================
# The ``1-my_list`` module
# =============================
#
# Using ``MyList``
# ---------------------
#
# Import the class:
#
#     >>> MyList = __import__('1-my_list').MyList
#
# Now test it:
#
# Create an empty `MyList` instance:
#
#     >>> my_list = MyList()
#     >>> my_list
#     []
#
# Add elements to the list:
#
#     >>> my_list.append(1)
#     >>> my_list.append(4)
#     >>> my_list.append(2)
#     >>> my_list
#     [1, 4, 2]
#
# Print the sorted list (without modifying the original list):
#
#     >>> my_list.print_sorted()
#     [1, 2, 4]
#     >>> my_list
#     [1, 4, 2]
#
# Create a `MyList` instance initialized with a list:
#
#     >>> my_list = MyList([3, 6, 2])
#     >>> my_list
#     [3, 6, 2]
#     >>> my_list.print_sorted()
#     [2, 3, 6]
#
# Create a `MyList` instance initialized with a string (converts string to list of characters):
#
#     >>> my_list = MyList("happy")
#     >>> my_list
#     ['h', 'a', 'p', 'p', 'y']
#     >>> my_list.print_sorted()
#     ['a', 'h', 'p', 'p', 'y']
#
# Testing `print_sorted` on an empty `MyList` instance:
#
#     >>> new_l = MyList()
#     >>> new_l.print_sorted()
#     []

